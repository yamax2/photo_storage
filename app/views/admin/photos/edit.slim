-# frozen_string_literal: true
- content_for :title, @photo.name

.row
  .col-sm-12.col-lg-9
    .card
      = form_for [:admin, @photo], html: {class: 'form-horizontal photo-edit-form'} do |f|
        .card-header
          strong
            = "#{@photo.name} (#{@photo.rubric.name})"

        .card-body.card-block
          = f.hidden_field :rubric_id
          = render partial: 'admin/partials/errors', locals: {model: @photo}

          .row.form-group
            .col.col-md-3
              = f.label :name
            .col-12.col-md-9
              = f.text_field :name, class: 'form-control', autofocus: true

          .row.form-group
            .col.col-md-3
              = f.label :rubric
            .col-12.col-md-9
              .input-group
                = f.text_field :rubric, class: 'form-control', readonly: true, value: @photo.rubric.name
                .input-group-append
                  button.btn.btn-outline-secondary.rubric-select type="button"
                    = t('.rubric_select')

          .row.form-group
            .col.col-md-3
              = f.label :tz
            .col-12.col-md-9
              = f.select :tz, Rails.application.config.photo_timezones, {}, class: 'form-control'

          .row.form-group
            .col.col-md-3
              = f.label :original_timestamp
            .col-12.col-md-9
              .input-group
                = f.text_field :original_timestamp, class: 'form-control datetimepicker',
                                                    autocomplete: 'off',
                                                    data: {toggle: 'datetimepicker', target: '#photo_original_timestamp'},
                                                    value: @photo.original_timestamp&.to_fs
                .input-group-append
                  button.btn.btn-outline-secondary.btn-clear type="button"
                    = t('.clear')

          .row.form-group
            .col.col-md-3
              = f.label :description
            .col-12.col-md-9
              = f.text_area :description, class: 'form-control', rows: 10

          .row.form-group
            .col.col-md-3
              = f.label :rotated
            .col-12.col-md-4
              = f.select :rotated, [1, 2, 3].map! { |value| [t('.rotated_deg', deg: value * 90) , value] },
                                   {include_blank: true},
                                   class: 'form-control'
            .col-12.col-md-5
              = f.select :effects, t('.effects').map { |line| [line[:name], line[:type]] },
                                   {},
                                   class: 'form-control selectpicker',
                                   multiple: true,
                                   data: {'live-search' => true}

          .row.form-group
            .col.col-md-3
              = f.label :lat_long

            .col-5.col-md-3
              = f.text_field :lat_long, class: 'form-control',
                                        readonly: true,
                                        multiple: true,
                                        value: @photo.lat_long&.x,
                                        id: 'photo_lat_long_x'
            .col-5.col-md-3
              = f.text_field :lat_long, class: 'form-control',
                                        readonly: true,
                                        multiple: true,
                                        value: @photo.lat_long&.y,
                                        id: 'photo_lat_long_y'
            .col.col-md-3
              = button_tag class: 'btn btn-outline-secondary btn-clear', type: 'button' do
                = t('.clear')

          .row.form-group
            .col.col-md-3
            .col.col-md-9
              #map*{data: {point: @photo.lat_long&.to_a || Rails.application.config.default_map_center}}

          .row.form-group
            .col.col-md-3
            .col.col-md-9.new-description
              = check_box_tag :get_new_description, 1, false, data: {error: t('.get_new_description_error')}
              = label_tag :get_new_description, t('.get_new_description')

        .card-footer.action-buttons
          = button_tag class: 'btn btn-primary btn-sm' do
            i.fa.fa-dot-circle-o
            = t('.apply')

          = link_to admin_photo_path(@photo), class: 'btn btn-danger btn-sm', data: {confirm: t('.delete_confirm')}, method: :delete do
            i.fa.fa-trash
            = t('.delete')

.modal#rubric-modal
  .modal-dialog.modal-xl
    .modal-content
      .modal-header
        h5.modal-title
          = Photo.human_attribute_name(:rubric)
        button.close*{type: 'button', data: {dismiss: 'modal'}}
          span
            | &times;
      .modal-body
        .form-group
          = text_field_tag :rubric_name_search, nil,
                                                class: 'form-control rubric_name_search',
                                                placeholder: t('.rubric_search'),
                                                data: {tree: '#photo-rubric-selector'}
        #photo-rubric-selector.rubrics-tree
      .modal-footer
        button.btn.btn-secondary*{data: {dismiss: 'modal'}}
          = t('.cancel')
        button.btn.btn-primary.btn-photo-rubric-apply*{data: {id: '#photo_rubric_id', name: '#photo_rubric'}}
          = t('.apply')
