-# frozen_string_literal: true

- content_for :title, t('admin.partials.menu.yandex_tokens')
- breadcrumb :yandex_tokens

.row
  .col-md-6
    .card
      .card-header
        strong
          = t('.actions')
      .card-body
        = link_to t('.new'), @new_token_url, class: 'btn btn-primary'

.row
  .col-sm-12
    .card
      .card-body
        p
          = t('.warning')
        .table-scroll
          table.table
            thead
              tr
                - %i[id login active dir other_dir free_space valid_till last_upload_at last_archived_at].each do |col|
                  th
                    = sort_link @search, col, ::Yandex::Token.human_attribute_name(col)
                th
            tbody
              - @tokens.each do |token|
                tr
                  - %i[id login active dir other_dir free_space].each do |col|
                    td
                      - if col == :free_space
                        = t '.free_space', free_space: number_to_human_size(token.total_space - token.used_space),
                                           total_space: number_to_human_size(token.total_space)
                      - elsif col == :active
                        label.switch.switch-text.switch-primary
                          input.switch-input type="checkbox"*{checked: token.active? ? 'checked' : nil, disabled: true}
                          span.switch-label*{data: {on: t('views.switches.on_text'), off: t('views.switches.off_text')}}
                          span.switch-handle
                      - else
                        = token[col]
                  - %i[valid_till last_upload_at].each do |col|
                    td
                      = token[col]&.to_fs
                  td
                    - if token.last_upload_at.present? && (token.last_archived_at.nil? || token.last_upload_at > token.last_archived_at)
                      i*{style: 'color:red'}
                        = token.last_archived_at&.to_fs || t('.not_archived')
                    - else
                      = token.last_archived_at&.to_fs

                  td.action-buttons
                    = link_to edit_admin_yandex_token_path(token), title: t('.edit'),
                                                                   class: 'btn btn-outline-success btn-sm' do
                      i.fa.fa-pencil

                    = link_to [:admin, token], title: t('.remove'),
                                               method: :delete,
                                               class: 'btn btn-outline-danger btn-sm',
                                               data: {confirm: t('.remove_confirm')} do
                      i.fa.fa-trash

                    = link_to refresh_admin_yandex_token_path(token), title: t('.refresh'),
                                                                      class: 'btn btn-outline-primary btn-sm' do
                      i.fa.fa-refresh

          - if @tokens.total_pages > 1
            = paginate @tokens, views_prefix: 'admin'
