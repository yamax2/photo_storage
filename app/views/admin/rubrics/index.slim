-# frozen_string_literal: true
- if parent_rubric.present?
  - content_for :title, t('.subrubrics', name: parent_rubric.name)
- else
  - content_for :title, t('admin.partials.menu.rubrics')

- breadcrumb :rubrics

.row
  .col-md-6
    .card
      .card-header
        strong
          = t('.actions')
      .card-body.action-buttons
        - if parent_rubric.present?
          = link_to admin_rubrics_path(id: parent_rubric.rubric_id), class: 'btn btn-success' do
            .fa.fa-level-up
            = t('.level_up')

        = link_to new_admin_rubric_path(id: parent_id), class: 'btn btn-primary' do
          .fa.fa-plus
          = t('.new')

.row
  .col-sm-12
    .card
      .card-body
        = search_form_for [:admin, @search], class: 'form-inline rubric-search-form' do |f|
          .form-group
            = f.search_field :name_cont, class: 'form-control', autofocus: true, placeholder: t('.search_by_name')
          = f.submit t('.search'), class: 'btn btn-success'

        .table-scroll
          table.table
            thead
              tr
                - %i[id name rubrics_count ord created_at desc_order hide_common_stat].each do |attr|
                  th
                    = sort_link @search, attr, Rubric.human_attribute_name(attr)
                th

            tbody
              - @rubrics.each do |rubric|
                tr
                  - %i[id name rubrics_count ord].each do |attr|
                    td
                      - if %i[id name].include?(attr)
                        = link_to rubric[attr], admin_rubrics_path(id: rubric.id)
                      - else
                        = rubric[attr]
                  td
                    = rubric.created_at&.to_fs
                  - %i[desc_order hide_common_stat].each do |attr|
                    td
                      label.switch.switch-text.switch-primary
                        input.switch-input type="checkbox"*{checked: rubric.public_send("#{attr}?") ? 'checked' : nil, disabled: true}
                        span.switch-label*{data: {on: t('views.switches.on_text'), off: t('views.switches.off_text')}}
                        span.switch-handle

                  td.action-buttons
                    = link_to admin_rubrics_path(id: rubric.id), title: t('.subrubrics', name: rubric.name),
                                                                 class: 'btn btn-outline-info btn-sm' do
                      i.fa.fa-level-down

                    = link_to page_path(rubric), title: t('.content'), target: '_blank',
                                                                              class: 'btn btn-outline-info btn-sm' do
                      i.fa.fa-picture-o

                    = link_to edit_admin_rubric_path(rubric), title: t('.edit'),
                                                              class: 'btn btn-outline-success btn-sm' do
                      i.fa.fa-pencil

                    = link_to admin_rubric_tracks_path(rubric), title: '',
                                                                class: 'btn btn-outline-info btn-sm' do
                      i.fa.fa-map-marker

                    = link_to [:admin, rubric], title: t('.remove'),
                                                method: :delete,
                                                class: 'btn btn-outline-danger btn-sm',
                                                data: {confirm: t('.remove_confirm')} do
                      i.fa.fa-trash

                    - %i[p2k].each do |size|
                      = link_to [:warm_up, :admin, rubric, {size: size}], titie: t('.warm_up', size: size),
                                  class: 'btn btn-outline-primary btn-sm' do
                        i.fa.fa-refresh

                    - if rubric.rubrics_count > 1
                      = link_to admin_rubrics_positions_path(id: rubric.id), title: t('.positions'),
                                                                             class: 'btn btn-outline-success btn-sm' do
                        i.fa.fa-sort

        - if @rubrics.total_pages > 1
          = paginate @rubrics, views_prefix: 'admin'
