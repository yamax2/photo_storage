version: '3.7'

environment:
  DOCKER_TLD: localhost
  POSTGRES_IMAGE_TAG: 14.2
  REDIS_IMAGE_TAG: 6
  DOCKER_RUBY_VERSION: 3.0
  DOCKER_GO_VERSION: 1.17
  RAILS_ENV: development
  LOG_LEVEL: debug

compose:
  files:
    - docker/docker-compose.yml
  project_name: photo_storage${RAILS_ENV}

interaction:
  sh:
    service: app

  irb:
    service: app
    command: bundle exec pry

  bundle:
    service: app
    command: bundle

  rake:
    service: app
    command: bundle exec rake

  rails:
    service: app
    command: bundle exec rails
    subcommands:
      s:
        service: web
        compose_method: up

  rspec:
    service: app
    environment:
      RAILS_ENV: test
    command: bundle exec rspec

  psql:
    service: db
    command: psql -h db -U postgres photos
    compose_run_options: [no-deps]

  go:
    service: proxy
    command: go

  go_sh:
    service: proxy
    command: sh

  go_test:
    service: proxy
    environment:
      RAILS_ENV: test
    command: go test -v ./...

  proxy_build:
    service: proxy-build
    command: go build -ldflags '-s -w' proxy_service.go
    compose_run_options: [no-deps]

  rubocop:
    service: app
    environment:
      RAILS_ENV: test
    command: bundle exec ./rubocop
    compose_run_options: [no-deps]

provision:
  - docker pull ruby:${DOCKER_RUBY_VERSION}-alpine
  - docker pull postgres:${POSTGRES_IMAGE_TAG}-alpine
  - docker pull redis:${REDIS_IMAGE_TAG}-alpine
  - docker pull golang:${DOCKER_GO_VERSION}-alpine
  - docker pull golang:${DOCKER_GO_VERSION}
  - ./docker/prepare_env.sh
  - docker volume create --name bundler_data
  - dip compose up -d db
  - dip bundle install
  - dip rails db:migrate
